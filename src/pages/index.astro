---
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../config";
const lastUpdated = new Date("2022-11-07T02:56:33+0000");
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body>
    <main>
      <h1>
        <a href="/">üë©‚Äçüíª üíû ‚úçÔ∏è<br /> Developers 4 Editors</a>
      </h1>
      <p class="text-sm">
        Last updated: <time datetime={lastUpdated.toISOString()}
          >{lastUpdated.toLocaleDateString()}</time
        >
      </p>
      <p>
        This page was made to complement the talk <strong
          >‚ÄúHow Developer Experience Holds Content Teams Back (and how to fix
          it)‚Äù</strong
        >, presented by <a href="https://www.knutmelvaer.no">Knut Melv√¶r</a> (<a
          href="https://www.sanity.io">Sanity.io</a
        >) at <a href="https//jamstackconf.org">Jamstack Conf SF, 2022</a>.
      </p><p>
        The main points of the talk are presented below. You can also <a
          href="/How-DX-holds-Content-Creators-Back-Knut-Melvaer-Jamstack-Conf-2022.pdf"
          download>download the slide deck</a
        >.
      </p>

      <div class="callout">
        <h2>Passionate about editorial experience?</h2>
        <p>
          Join
          <a href="https://slack.sanity.io"
            >the #editorial-experience channel on the Sanity Community Slack</a
          >
          and share your thougths and questions!
        </p>
      </div>

      <h2 id="5-things">
        <a class="anchor-link" href="#5-things">#</a>
        5 things developers should consider working with content creators
      </h2>
      <ol>
        <li>
          <h3>
            Don‚Äòt expect content creators to write in your <code
              >[**special**](syntax)</code
            >
          </h3>
          <p class="no">
            You might love writing in Markdown and that's OK! But don't expect
            content professional to use Markdown, MDX, or other specialized
            syntax. Content creation for the web is hard enough by itself.
          </p><p class="yes">
            Strive to build and support proper tools for content creators so
            they can do their job and focus on what matters.
          </p>
        </li>
        <li>
          <h3>Let content creators collaborate in the CMS</h3>
          <p class="no">
            Don't force content creators to work in systems that allow loss of
            work due to race conditions. Document locking is not an
            user-friendly solution either.
          </p>
          <p class="yes">
            Let content creators collaborate in real-time and let them roll back
            specific changes if they need to.
          </p>
        </li><li>
          <h3>Give content creators flexibility where it matters</h3>
          <p class="no">
            Don't give content creators infinite flexibility as it adds
            cognitive overhead. Be careful with allowing modifications to pixel
            and color hex values in your content. It makes it easy to break
            design patterns and accessbility guidelines.
          </p>
          <p class="yes">
            Use the benefits of modern frontend tools and component libraries
            and give content creators meaningful options that allows them to
            express priority, variation, and emphazis.
          </p>
        </li><li>
          <h3>
            Give content creators context, especially in decoupled systems
          </h3>
          <p>
            The requirements to build modern digital experiences demand
            composeable systems connected with APIs. The same content is
            expected to appear in different places. But this has also made it
            harder for content creators to predict how their work will be
            experienced by their audience.
          </p>
          <p class="no">
            Don't leave content creators with a headless system that's not
            documented and no ways of previewing changes before they go live.
          </p>
          <p class="yes">
            Use content field labels, validation, and other features to give
            helpful in-place context and cues for how to enter content
            correctly. Work <em>together</em> with content creators to document the
            system.
          </p>
        </li><li>
          <h3>Ask content creators what they need (and why)</h3>
          <p>
            Most developers are used to the idea that technology should work for
            us and not the other way around. We give maintainers feedback in
            GitHub Issues and support formus. Content creators aren't
            necessarily used to the idea that they can expect more from their
            tools.
          </p>
          <p class="no">
            Do not assume that the lack of feedback from content creators mean
            that everything is OK. Don't uncriticially implement features they
            might ask for either, it's also your responbility to make sure that
            content is stored in a way that is maintainable and resilitent.
          </p>
          <p class="yes">
            Talk to content creators to understand what they need and where they
            have friction. Observe how they use the system, and help them
            understand what is possible and what is not. Always ask why a
            feature is needed and what we are trying to achieve.
          </p>
        </li>
      </ol>
    </main>
    <Footer />
  </body>
</html>
